classDiagram
  %% 337:2995:1
  class IGovernorCompatibilityBravo {
    <<Contract>>
    +quorumVotes(): (uint256)$
    +proposals(uint256): (uint256 id, address proposer, uint256 eta, uint256 startBlock, uint256 endBlock, uint256 forVotes, uint256 againstVotes, uint256 abstainVotes, bool canceled, bool executed)$
    +propose(address[] memory targets, uint256[] memory values, string[] memory signatures, bytes[] memory calldatas, string memory description): (uint256)$
    +queue(uint256 proposalId)$
    +execute(uint256 proposalId)$
    +cancel(uint256 proposalId)$
    +getActions(uint256 proposalId): (address[] memory targets, uint256[] memory values, string[] memory signatures, bytes[] memory calldatas)$
    +getReceipt(uint256 proposalId, address voter): (struct IGovernorCompatibilityBravo.Receipt memory)$
  }
  
  IGovernorCompatibilityBravo --|> IGovernor
  
  %% 258:9330:0
  class IGovernor {
    <<Contract>>
    +name(): (string memory)$
    +version(): (string memory)$
    +COUNTING_MODE(): (string memory)$
    +hashProposal(address[] memory targets, uint256[] memory values, bytes[] memory calldatas, bytes32 descriptionHash): (uint256)$
    +state(uint256 proposalId): (enum IGovernor.ProposalState)$
    +proposalSnapshot(uint256 proposalId): (uint256)$
    +proposalDeadline(uint256 proposalId): (uint256)$
    +votingDelay(): (uint256)$
    +votingPeriod(): (uint256)$
    +quorum(uint256 blockNumber): (uint256)$
    +getVotes(address account, uint256 blockNumber): (uint256)$
    +getVotesWithParams(address account, uint256 blockNumber, bytes memory params): (uint256)$
    +hasVoted(uint256 proposalId, address account): (bool)$
    +propose(address[] memory targets, uint256[] memory values, bytes[] memory calldatas, string memory description): (uint256 proposalId)$
    +execute(address[] memory targets, uint256[] memory values, bytes[] memory calldatas, bytes32 descriptionHash): (uint256 proposalId)$
    +castVote(uint256 proposalId, uint8 support): (uint256 balance)$
    +castVoteWithReason(uint256 proposalId, uint8 support, string calldata reason): (uint256 balance)$
    +castVoteWithReasonAndParams(uint256 proposalId, uint8 support, string calldata reason, bytes memory params): (uint256 balance)$
    +castVoteBySig(uint256 proposalId, uint8 support, uint8 v, bytes32 r, bytes32 s): (uint256 balance)$
    +castVoteWithReasonAndParamsBySig(uint256 proposalId, uint8 support, string calldata reason, bytes memory params, uint8 v, bytes32 r, bytes32 s): (uint256 balance)$
  }
  
  IGovernor --|> IERC165
  
  %% 405:447:3
  class IERC165 {
    <<Interface>>
    #supportsInterface(bytes4 interfaceId): (bool)$
  }
  