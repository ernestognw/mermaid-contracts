classDiagram
  %% 1658:9815:3
  class ERC4626 {
    <<Contract>>
    ~constructor(contract IERC20 asset_)
    -_tryGetAssetDecimals(contract IERC20 asset_): (bool, uint8)
    +decimals(): (uint8)
    +asset(): (address)
    +totalAssets(): (uint256)
    +convertToShares(uint256 assets): (uint256 shares)
    +convertToAssets(uint256 shares): (uint256 assets)
    +maxDeposit(address): (uint256)
    +maxMint(address): (uint256)
    +maxWithdraw(address owner): (uint256)
    +maxRedeem(address owner): (uint256)
    +previewDeposit(uint256 assets): (uint256)
    +previewMint(uint256 shares): (uint256)
    +previewWithdraw(uint256 assets): (uint256)
    +previewRedeem(uint256 shares): (uint256)
    +deposit(uint256 assets, address receiver): (uint256)
    +mint(uint256 shares, address receiver): (uint256)
    +withdraw(uint256 assets, address receiver, address owner): (uint256)
    +redeem(uint256 shares, address receiver, address owner): (uint256)
    ~_convertToShares(uint256 assets, enum Math.Rounding rounding): (uint256 shares)
    ~_initialConvertToShares(uint256 assets, enum Math.Rounding): (uint256 shares)
    ~_convertToAssets(uint256 shares, enum Math.Rounding rounding): (uint256 assets)
    ~_initialConvertToAssets(uint256 shares, enum Math.Rounding): (uint256 assets)
    ~_deposit(address caller, address receiver, uint256 assets, uint256 shares)
    ~_withdraw(address caller, address receiver, address owner, uint256 assets, uint256 shares)
    -_isVaultCollateralized(): (bool)
  }
  
  ERC4626 --|> ERC20
  
  %% 1401:11610:1
  class ERC20 {
    <<Contract>>
    +constructor(string memory name_, string memory symbol_)
    +name(): (string memory)
    +symbol(): (string memory)
    +decimals(): (uint8)
    +totalSupply(): (uint256)
    +balanceOf(address account): (uint256)
    +transfer(address to, uint256 amount): (bool)
    +allowance(address owner, address spender): (uint256)
    +approve(address spender, uint256 amount): (bool)
    +transferFrom(address from, address to, uint256 amount): (bool)
    +increaseAllowance(address spender, uint256 addedValue): (bool)
    +decreaseAllowance(address spender, uint256 subtractedValue): (bool)
    ~_transfer(address from, address to, uint256 amount)
    ~_mint(address account, uint256 amount)
    ~_burn(address account, uint256 amount)
    ~_approve(address owner, address spender, uint256 amount)
    ~_spendAllowance(address owner, address spender, uint256 amount)
    ~_beforeTokenTransfer(address from, address to, uint256 amount)
    ~_afterTokenTransfer(address from, address to, uint256 amount)
  }
  
  ERC20 --|> Context
  
  %% 608:235:8
  class Context {
    <<Contract>>
    ~_msgSender(): (address)
    ~_msgData(): (bytes calldata)
  }
  
  ERC20 --|> IERC20
  
  %% 202:2564:2
  class IERC20 {
    <<Interface>>
    #totalSupply(): (uint256)$
    #balanceOf(address account): (uint256)$
    #transfer(address to, uint256 amount): (bool)$
    #allowance(address owner, address spender): (uint256)$
    #approve(address spender, uint256 amount): (bool)$
    #transferFrom(address from, address to, uint256 amount): (bool)$
  }
  
  ERC20 --|> IERC20Metadata
  
  %% 277:405:4
  class IERC20Metadata {
    <<Interface>>
    #name(): (string memory)$
    #symbol(): (string memory)$
    #decimals(): (uint8)$
  }
  
  IERC20Metadata --|> IERC20
  
  %% 202:2564:2
  class IERC20 {
    <<Interface>>
    #totalSupply(): (uint256)$
    #balanceOf(address account): (uint256)$
    #transfer(address to, uint256 amount): (bool)$
    #allowance(address owner, address spender): (uint256)$
    #approve(address spender, uint256 amount): (bool)$
    #transferFrom(address from, address to, uint256 amount): (bool)$
  }
  
  ERC4626 --|> IERC4626
  
  %% 391:11844:0
  class IERC4626 {
    <<Interface>>
    #asset(): (address assetTokenAddress)$
    #totalAssets(): (uint256 totalManagedAssets)$
    #convertToShares(uint256 assets): (uint256 shares)$
    #convertToAssets(uint256 shares): (uint256 assets)$
    #maxDeposit(address receiver): (uint256 maxAssets)$
    #previewDeposit(uint256 assets): (uint256 shares)$
    #deposit(uint256 assets, address receiver): (uint256 shares)$
    #maxMint(address receiver): (uint256 maxShares)$
    #previewMint(uint256 shares): (uint256 assets)$
    #mint(uint256 shares, address receiver): (uint256 assets)$
    #maxWithdraw(address owner): (uint256 maxAssets)$
    #previewWithdraw(uint256 assets): (uint256 shares)$
    #withdraw(uint256 assets, address receiver, address owner): (uint256 shares)$
    #maxRedeem(address owner): (uint256 maxShares)$
    #previewRedeem(uint256 shares): (uint256 assets)$
    #redeem(uint256 shares, address receiver, address owner): (uint256 assets)$
  }
  
  IERC4626 --|> IERC20
  
  %% 202:2564:2
  class IERC20 {
    <<Interface>>
    #totalSupply(): (uint256)$
    #balanceOf(address account): (uint256)$
    #transfer(address to, uint256 amount): (bool)$
    #allowance(address owner, address spender): (uint256)$
    #approve(address spender, uint256 amount): (bool)$
    #transferFrom(address from, address to, uint256 amount): (bool)$
  }
  
  IERC4626 --|> IERC20Metadata
  
  %% 277:405:4
  class IERC20Metadata {
    <<Interface>>
    #name(): (string memory)$
    #symbol(): (string memory)$
    #decimals(): (uint8)$
  }
  
  IERC20Metadata --|> IERC20
  
  %% 202:2564:2
  class IERC20 {
    <<Interface>>
    #totalSupply(): (uint256)$
    #balanceOf(address account): (uint256)$
    #transfer(address to, uint256 amount): (bool)$
    #allowance(address owner, address spender): (uint256)$
    #approve(address spender, uint256 amount): (bool)$
    #transferFrom(address from, address to, uint256 amount): (bool)$
  }
  