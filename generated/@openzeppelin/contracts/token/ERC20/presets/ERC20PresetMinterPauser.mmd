classDiagram
  %% 1005:2013:10
  class ERC20PresetMinterPauser {
    <<Contract>>
    +constructor(string memory name, string memory symbol)
    +mint(address to, uint256 amount)
    +pause()
    +unpause()
    ~_beforeTokenTransfer(address from, address to, uint256 amount)
  }
  
  ERC20PresetMinterPauser --|> Context
  
  %% 608:235:11
  class Context {
    <<Contract>>
    ~_msgSender(): (address)
    ~_msgData(): (bytes calldata)
  }
  
  ERC20PresetMinterPauser --|> AccessControlEnumerable
  
  %% 355:2051:1
  class AccessControlEnumerable {
    <<Contract>>
    +supportsInterface(bytes4 interfaceId): (bool)
    +getRoleMember(bytes32 role, uint256 index): (address)
    +getRoleMemberCount(bytes32 role): (uint256)
    ~_grantRole(bytes32 role, address account)
    ~_revokeRole(bytes32 role, address account)
  }
  
  AccessControlEnumerable --|> IAccessControlEnumerable
  
  %% 261:966:3
  class IAccessControlEnumerable {
    <<Interface>>
    #getRoleMember(bytes32 role, uint256 index): (address)$
    #getRoleMemberCount(bytes32 role): (uint256)$
  }
  
  IAccessControlEnumerable --|> IAccessControl
  
  %% 209:2710:2
  class IAccessControl {
    <<Interface>>
    #hasRole(bytes32 role, address account): (bool)$
    #getRoleAdmin(bytes32 role): (bytes32)$
    #grantRole(bytes32 role, address account)$
    #revokeRole(bytes32 role, address account)$
    #renounceRole(bytes32 role, address account)$
  }
  
  AccessControlEnumerable --|> AccessControl
  
  %% 1806:6295:0
  class AccessControl {
    <<Contract>>
    +supportsInterface(bytes4 interfaceId): (bool)
    +hasRole(bytes32 role, address account): (bool)
    ~_checkRole(bytes32 role)
    ~_checkRole(bytes32 role, address account)
    +getRoleAdmin(bytes32 role): (bytes32)
    +grantRole(bytes32 role, address account)
    +revokeRole(bytes32 role, address account)
    +renounceRole(bytes32 role, address account)
    ~_setupRole(bytes32 role, address account)
    ~_setRoleAdmin(bytes32 role, bytes32 adminRole)
    ~_grantRole(bytes32 role, address account)
    ~_revokeRole(bytes32 role, address account)
  }
  
  AccessControl --|> Context
  
  %% 608:235:11
  class Context {
    <<Contract>>
    ~_msgSender(): (address)
    ~_msgData(): (bytes calldata)
  }
  
  AccessControl --|> IAccessControl
  
  %% 209:2710:2
  class IAccessControl {
    <<Interface>>
    #hasRole(bytes32 role, address account): (bool)$
    #getRoleAdmin(bytes32 role): (bytes32)$
    #grantRole(bytes32 role, address account)$
    #revokeRole(bytes32 role, address account)$
    #renounceRole(bytes32 role, address account)$
  }
  
  AccessControl --|> ERC165
  
  %% 726:260:13
  class ERC165 {
    <<Contract>>
    +supportsInterface(bytes4 interfaceId): (bool)
  }
  
  ERC165 --|> IERC165
  
  %% 405:447:14
  class IERC165 {
    <<Interface>>
    #supportsInterface(bytes4 interfaceId): (bool)$
  }
  
  ERC20PresetMinterPauser --|> ERC20Burnable
  
  %% 419:717:7
  class ERC20Burnable {
    <<Contract>>
    +burn(uint256 amount)
    +burnFrom(address account, uint256 amount)
  }
  
  ERC20Burnable --|> Context
  
  %% 608:235:11
  class Context {
    <<Contract>>
    ~_msgSender(): (address)
    ~_msgData(): (bytes calldata)
  }
  
  ERC20Burnable --|> ERC20
  
  %% 1401:11610:5
  class ERC20 {
    <<Contract>>
    +constructor(string memory name_, string memory symbol_)
    +name(): (string memory)
    +symbol(): (string memory)
    +decimals(): (uint8)
    +totalSupply(): (uint256)
    +balanceOf(address account): (uint256)
    +transfer(address to, uint256 amount): (bool)
    +allowance(address owner, address spender): (uint256)
    +approve(address spender, uint256 amount): (bool)
    +transferFrom(address from, address to, uint256 amount): (bool)
    +increaseAllowance(address spender, uint256 addedValue): (bool)
    +decreaseAllowance(address spender, uint256 subtractedValue): (bool)
    ~_transfer(address from, address to, uint256 amount)
    ~_mint(address account, uint256 amount)
    ~_burn(address account, uint256 amount)
    ~_approve(address owner, address spender, uint256 amount)
    ~_spendAllowance(address owner, address spender, uint256 amount)
    ~_beforeTokenTransfer(address from, address to, uint256 amount)
    ~_afterTokenTransfer(address from, address to, uint256 amount)
  }
  
  ERC20 --|> Context
  
  %% 608:235:11
  class Context {
    <<Contract>>
    ~_msgSender(): (address)
    ~_msgData(): (bytes calldata)
  }
  
  ERC20 --|> IERC20
  
  %% 202:2564:6
  class IERC20 {
    <<Interface>>
    #totalSupply(): (uint256)$
    #balanceOf(address account): (uint256)$
    #transfer(address to, uint256 amount): (bool)$
    #allowance(address owner, address spender): (uint256)$
    #approve(address spender, uint256 amount): (bool)$
    #transferFrom(address from, address to, uint256 amount): (bool)$
  }
  
  ERC20 --|> IERC20Metadata
  
  %% 277:405:9
  class IERC20Metadata {
    <<Interface>>
    #name(): (string memory)$
    #symbol(): (string memory)$
    #decimals(): (uint8)$
  }
  
  IERC20Metadata --|> IERC20
  
  %% 202:2564:6
  class IERC20 {
    <<Interface>>
    #totalSupply(): (uint256)$
    #balanceOf(address account): (uint256)$
    #transfer(address to, uint256 amount): (bool)$
    #allowance(address owner, address spender): (uint256)$
    #approve(address spender, uint256 amount): (bool)$
    #transferFrom(address from, address to, uint256 amount): (bool)$
  }
  
  ERC20PresetMinterPauser --|> ERC20Pausable
  
  %% 469:462:8
  class ERC20Pausable {
    <<Contract>>
    ~_beforeTokenTransfer(address from, address to, uint256 amount)
  }
  
  ERC20Pausable --|> ERC20
  
  %% 1401:11610:5
  class ERC20 {
    <<Contract>>
    +constructor(string memory name_, string memory symbol_)
    +name(): (string memory)
    +symbol(): (string memory)
    +decimals(): (uint8)
    +totalSupply(): (uint256)
    +balanceOf(address account): (uint256)
    +transfer(address to, uint256 amount): (bool)
    +allowance(address owner, address spender): (uint256)
    +approve(address spender, uint256 amount): (bool)
    +transferFrom(address from, address to, uint256 amount): (bool)
    +increaseAllowance(address spender, uint256 addedValue): (bool)
    +decreaseAllowance(address spender, uint256 subtractedValue): (bool)
    ~_transfer(address from, address to, uint256 amount)
    ~_mint(address account, uint256 amount)
    ~_burn(address account, uint256 amount)
    ~_approve(address owner, address spender, uint256 amount)
    ~_spendAllowance(address owner, address spender, uint256 amount)
    ~_beforeTokenTransfer(address from, address to, uint256 amount)
    ~_afterTokenTransfer(address from, address to, uint256 amount)
  }
  
  ERC20 --|> Context
  
  %% 608:235:11
  class Context {
    <<Contract>>
    ~_msgSender(): (address)
    ~_msgData(): (bytes calldata)
  }
  
  ERC20 --|> IERC20
  
  %% 202:2564:6
  class IERC20 {
    <<Interface>>
    #totalSupply(): (uint256)$
    #balanceOf(address account): (uint256)$
    #transfer(address to, uint256 amount): (bool)$
    #allowance(address owner, address spender): (uint256)$
    #approve(address spender, uint256 amount): (bool)$
    #transferFrom(address from, address to, uint256 amount): (bool)$
  }
  
  ERC20 --|> IERC20Metadata
  
  %% 277:405:9
  class IERC20Metadata {
    <<Interface>>
    #name(): (string memory)$
    #symbol(): (string memory)$
    #decimals(): (uint8)$
  }
  
  IERC20Metadata --|> IERC20
  
  %% 202:2564:6
  class IERC20 {
    <<Interface>>
    #totalSupply(): (uint256)$
    #balanceOf(address account): (uint256)$
    #transfer(address to, uint256 amount): (bool)$
    #allowance(address owner, address spender): (uint256)$
    #approve(address spender, uint256 amount): (bool)$
    #transferFrom(address from, address to, uint256 amount): (bool)$
  }
  
  ERC20Pausable --|> Pausable
  
  %% 602:1950:4
  class Pausable {
    <<Contract>>
    ~constructor()
    +paused(): (bool)
    ~_requireNotPaused()
    ~_requirePaused()
    ~_pause()
    ~_unpause()
  }
  
  Pausable --|> Context
  
  %% 608:235:11
  class Context {
    <<Contract>>
    ~_msgSender(): (address)
    ~_msgData(): (bytes calldata)
  }
  