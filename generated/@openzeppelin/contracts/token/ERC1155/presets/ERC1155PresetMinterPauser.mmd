classDiagram
  %% 1017:2896:11
  class ERC1155PresetMinterPauser {
    <<Contract>>
    +constructor(string memory uri)
    +mint(address to, uint256 id, uint256 amount, bytes memory data)
    +mintBatch(address to, uint256[] memory ids, uint256[] memory amounts, bytes memory data)
    +pause()
    +unpause()
    +supportsInterface(bytes4 interfaceId): (bool)
    ~_beforeTokenTransfer(address operator, address from, address to, uint256[] memory ids, uint256[] memory amounts, bytes memory data)
  }
  
  ERC1155PresetMinterPauser --|> Context
  
  %% 608:235:13
  class Context {
    <<Contract>>
    ~_msgSender(): (address)
    ~_msgData(): (bytes calldata)
  }
  
  ERC1155PresetMinterPauser --|> AccessControlEnumerable
  
  %% 355:2051:1
  class AccessControlEnumerable {
    <<Contract>>
    +supportsInterface(bytes4 interfaceId): (bool)
    +getRoleMember(bytes32 role, uint256 index): (address)
    +getRoleMemberCount(bytes32 role): (uint256)
    ~_grantRole(bytes32 role, address account)
    ~_revokeRole(bytes32 role, address account)
  }
  
  AccessControlEnumerable --|> IAccessControlEnumerable
  
  %% 261:966:3
  class IAccessControlEnumerable {
    <<Interface>>
    #getRoleMember(bytes32 role, uint256 index): (address)$
    #getRoleMemberCount(bytes32 role): (uint256)$
  }
  
  IAccessControlEnumerable --|> IAccessControl
  
  %% 209:2710:2
  class IAccessControl {
    <<Interface>>
    #hasRole(bytes32 role, address account): (bool)$
    #getRoleAdmin(bytes32 role): (bytes32)$
    #grantRole(bytes32 role, address account)$
    #revokeRole(bytes32 role, address account)$
    #renounceRole(bytes32 role, address account)$
  }
  
  AccessControlEnumerable --|> AccessControl
  
  %% 1806:6295:0
  class AccessControl {
    <<Contract>>
    +supportsInterface(bytes4 interfaceId): (bool)
    +hasRole(bytes32 role, address account): (bool)
    ~_checkRole(bytes32 role)
    ~_checkRole(bytes32 role, address account)
    +getRoleAdmin(bytes32 role): (bytes32)
    +grantRole(bytes32 role, address account)
    +revokeRole(bytes32 role, address account)
    +renounceRole(bytes32 role, address account)
    ~_setupRole(bytes32 role, address account)
    ~_setRoleAdmin(bytes32 role, bytes32 adminRole)
    ~_grantRole(bytes32 role, address account)
    ~_revokeRole(bytes32 role, address account)
  }
  
  AccessControl --|> Context
  
  %% 608:235:13
  class Context {
    <<Contract>>
    ~_msgSender(): (address)
    ~_msgData(): (bytes calldata)
  }
  
  AccessControl --|> IAccessControl
  
  %% 209:2710:2
  class IAccessControl {
    <<Interface>>
    #hasRole(bytes32 role, address account): (bool)$
    #getRoleAdmin(bytes32 role): (bytes32)$
    #grantRole(bytes32 role, address account)$
    #revokeRole(bytes32 role, address account)$
    #renounceRole(bytes32 role, address account)$
  }
  
  AccessControl --|> ERC165
  
  %% 726:260:15
  class ERC165 {
    <<Contract>>
    +supportsInterface(bytes4 interfaceId): (bool)
  }
  
  ERC165 --|> IERC165
  
  %% 405:447:16
  class IERC165 {
    <<Interface>>
    #supportsInterface(bytes4 interfaceId): (bool)$
  }
  
  ERC1155PresetMinterPauser --|> ERC1155Burnable
  
  %% 357:721:8
  class ERC1155Burnable {
    <<Contract>>
    +burn(address account, uint256 id, uint256 value)
    +burnBatch(address account, uint256[] memory ids, uint256[] memory values)
  }
  
  ERC1155Burnable --|> ERC1155
  
  %% 570:16689:5
  class ERC1155 {
    <<Contract>>
    +constructor(string memory uri_)
    +supportsInterface(bytes4 interfaceId): (bool)
    +uri(uint256): (string memory)
    +balanceOf(address account, uint256 id): (uint256)
    +balanceOfBatch(address[] memory accounts, uint256[] memory ids): (uint256[] memory)
    +setApprovalForAll(address operator, bool approved)
    +isApprovedForAll(address account, address operator): (bool)
    +safeTransferFrom(address from, address to, uint256 id, uint256 amount, bytes memory data)
    +safeBatchTransferFrom(address from, address to, uint256[] memory ids, uint256[] memory amounts, bytes memory data)
    ~_safeTransferFrom(address from, address to, uint256 id, uint256 amount, bytes memory data)
    ~_safeBatchTransferFrom(address from, address to, uint256[] memory ids, uint256[] memory amounts, bytes memory data)
    ~_setURI(string memory newuri)
    ~_mint(address to, uint256 id, uint256 amount, bytes memory data)
    ~_mintBatch(address to, uint256[] memory ids, uint256[] memory amounts, bytes memory data)
    ~_burn(address from, uint256 id, uint256 amount)
    ~_burnBatch(address from, uint256[] memory ids, uint256[] memory amounts)
    ~_setApprovalForAll(address owner, address operator, bool approved)
    ~_beforeTokenTransfer(address operator, address from, address to, uint256[] memory ids, uint256[] memory amounts, bytes memory data)
    ~_afterTokenTransfer(address operator, address from, address to, uint256[] memory ids, uint256[] memory amounts, bytes memory data)
    -_doSafeTransferAcceptanceCheck(address operator, address from, address to, uint256 id, uint256 amount, bytes memory data)
    -_doSafeBatchTransferAcceptanceCheck(address operator, address from, address to, uint256[] memory ids, uint256[] memory amounts, bytes memory data)
    -_asSingletonArray(uint256 element): (uint256[] memory)
  }
  
  ERC1155 --|> Context
  
  %% 608:235:13
  class Context {
    <<Contract>>
    ~_msgSender(): (address)
    ~_msgData(): (bytes calldata)
  }
  
  ERC1155 --|> ERC165
  
  %% 726:260:15
  class ERC165 {
    <<Contract>>
    +supportsInterface(bytes4 interfaceId): (bool)
  }
  
  ERC165 --|> IERC165
  
  %% 405:447:16
  class IERC165 {
    <<Interface>>
    #supportsInterface(bytes4 interfaceId): (bool)$
  }
  
  ERC1155 --|> IERC1155
  
  %% 350:3723:6
  class IERC1155 {
    <<Interface>>
    #balanceOf(address account, uint256 id): (uint256)$
    #balanceOfBatch(address[] calldata accounts, uint256[] calldata ids): (uint256[] memory)$
    #setApprovalForAll(address operator, bool approved)$
    #isApprovedForAll(address account, address operator): (bool)$
    #safeTransferFrom(address from, address to, uint256 id, uint256 amount, bytes calldata data)$
    #safeBatchTransferFrom(address from, address to, uint256[] calldata ids, uint256[] calldata amounts, bytes calldata data)$
  }
  
  IERC1155 --|> IERC165
  
  %% 405:447:16
  class IERC165 {
    <<Interface>>
    #supportsInterface(bytes4 interfaceId): (bool)$
  }
  
  ERC1155 --|> IERC1155MetadataURI
  
  %% 364:310:10
  class IERC1155MetadataURI {
    <<Interface>>
    #uri(uint256 id): (string memory)$
  }
  
  IERC1155MetadataURI --|> IERC1155
  
  %% 350:3723:6
  class IERC1155 {
    <<Interface>>
    #balanceOf(address account, uint256 id): (uint256)$
    #balanceOfBatch(address[] calldata accounts, uint256[] calldata ids): (uint256[] memory)$
    #setApprovalForAll(address operator, bool approved)$
    #isApprovedForAll(address account, address operator): (bool)$
    #safeTransferFrom(address from, address to, uint256 id, uint256 amount, bytes calldata data)$
    #safeBatchTransferFrom(address from, address to, uint256[] calldata ids, uint256[] calldata amounts, bytes calldata data)$
  }
  
  IERC1155 --|> IERC165
  
  %% 405:447:16
  class IERC165 {
    <<Interface>>
    #supportsInterface(bytes4 interfaceId): (bool)$
  }
  
  ERC1155PresetMinterPauser --|> ERC1155Pausable
  
  %% 507:585:9
  class ERC1155Pausable {
    <<Contract>>
    ~_beforeTokenTransfer(address operator, address from, address to, uint256[] memory ids, uint256[] memory amounts, bytes memory data)
  }
  
  ERC1155Pausable --|> ERC1155
  
  %% 570:16689:5
  class ERC1155 {
    <<Contract>>
    +constructor(string memory uri_)
    +supportsInterface(bytes4 interfaceId): (bool)
    +uri(uint256): (string memory)
    +balanceOf(address account, uint256 id): (uint256)
    +balanceOfBatch(address[] memory accounts, uint256[] memory ids): (uint256[] memory)
    +setApprovalForAll(address operator, bool approved)
    +isApprovedForAll(address account, address operator): (bool)
    +safeTransferFrom(address from, address to, uint256 id, uint256 amount, bytes memory data)
    +safeBatchTransferFrom(address from, address to, uint256[] memory ids, uint256[] memory amounts, bytes memory data)
    ~_safeTransferFrom(address from, address to, uint256 id, uint256 amount, bytes memory data)
    ~_safeBatchTransferFrom(address from, address to, uint256[] memory ids, uint256[] memory amounts, bytes memory data)
    ~_setURI(string memory newuri)
    ~_mint(address to, uint256 id, uint256 amount, bytes memory data)
    ~_mintBatch(address to, uint256[] memory ids, uint256[] memory amounts, bytes memory data)
    ~_burn(address from, uint256 id, uint256 amount)
    ~_burnBatch(address from, uint256[] memory ids, uint256[] memory amounts)
    ~_setApprovalForAll(address owner, address operator, bool approved)
    ~_beforeTokenTransfer(address operator, address from, address to, uint256[] memory ids, uint256[] memory amounts, bytes memory data)
    ~_afterTokenTransfer(address operator, address from, address to, uint256[] memory ids, uint256[] memory amounts, bytes memory data)
    -_doSafeTransferAcceptanceCheck(address operator, address from, address to, uint256 id, uint256 amount, bytes memory data)
    -_doSafeBatchTransferAcceptanceCheck(address operator, address from, address to, uint256[] memory ids, uint256[] memory amounts, bytes memory data)
    -_asSingletonArray(uint256 element): (uint256[] memory)
  }
  
  ERC1155 --|> Context
  
  %% 608:235:13
  class Context {
    <<Contract>>
    ~_msgSender(): (address)
    ~_msgData(): (bytes calldata)
  }
  
  ERC1155 --|> ERC165
  
  %% 726:260:15
  class ERC165 {
    <<Contract>>
    +supportsInterface(bytes4 interfaceId): (bool)
  }
  
  ERC165 --|> IERC165
  
  %% 405:447:16
  class IERC165 {
    <<Interface>>
    #supportsInterface(bytes4 interfaceId): (bool)$
  }
  
  ERC1155 --|> IERC1155
  
  %% 350:3723:6
  class IERC1155 {
    <<Interface>>
    #balanceOf(address account, uint256 id): (uint256)$
    #balanceOfBatch(address[] calldata accounts, uint256[] calldata ids): (uint256[] memory)$
    #setApprovalForAll(address operator, bool approved)$
    #isApprovedForAll(address account, address operator): (bool)$
    #safeTransferFrom(address from, address to, uint256 id, uint256 amount, bytes calldata data)$
    #safeBatchTransferFrom(address from, address to, uint256[] calldata ids, uint256[] calldata amounts, bytes calldata data)$
  }
  
  IERC1155 --|> IERC165
  
  %% 405:447:16
  class IERC165 {
    <<Interface>>
    #supportsInterface(bytes4 interfaceId): (bool)$
  }
  
  ERC1155 --|> IERC1155MetadataURI
  
  %% 364:310:10
  class IERC1155MetadataURI {
    <<Interface>>
    #uri(uint256 id): (string memory)$
  }
  
  IERC1155MetadataURI --|> IERC1155
  
  %% 350:3723:6
  class IERC1155 {
    <<Interface>>
    #balanceOf(address account, uint256 id): (uint256)$
    #balanceOfBatch(address[] calldata accounts, uint256[] calldata ids): (uint256[] memory)$
    #setApprovalForAll(address operator, bool approved)$
    #isApprovedForAll(address account, address operator): (bool)$
    #safeTransferFrom(address from, address to, uint256 id, uint256 amount, bytes calldata data)$
    #safeBatchTransferFrom(address from, address to, uint256[] calldata ids, uint256[] calldata amounts, bytes calldata data)$
  }
  
  IERC1155 --|> IERC165
  
  %% 405:447:16
  class IERC165 {
    <<Interface>>
    #supportsInterface(bytes4 interfaceId): (bool)$
  }
  
  ERC1155Pausable --|> Pausable
  
  %% 602:1950:4
  class Pausable {
    <<Contract>>
    ~constructor()
    +paused(): (bool)
    ~_requireNotPaused()
    ~_requirePaused()
    ~_pause()
    ~_unpause()
  }
  
  Pausable --|> Context
  
  %% 608:235:13
  class Context {
    <<Contract>>
    ~_msgSender(): (address)
    ~_msgData(): (bytes calldata)
  }
  